.. index:: pair: struct; dnnl::softmax_backward::primitive_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc:

struct dnnl::softmax_backward::primitive_desc
=============================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Primitive descriptor for a softmax backward propagation primitive. :ref:`More...<details-structdnnl_1_1softmax__backward_1_1primitive__desc>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <dnnl.hpp>
	
	struct primitive_desc: public :ref:`dnnl::primitive_desc<doxid-structdnnl_1_1primitive__desc>`
	{
		// methods
	
		:ref:`primitive_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a397eb6014080012b7bb1d6a17a9001d7>`();
	
		:ref:`primitive_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a9d5fa8870576a11cd240724e9b17ffd3>`(
			const :ref:`engine<doxid-structdnnl_1_1engine>`& aengine,
			:ref:`algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` aalgorithm,
			const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& diff_src_desc,
			const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& diff_dst_desc,
			const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& dst_desc,
			int axis,
			const :ref:`softmax_forward::primitive_desc<doxid-structdnnl_1_1softmax__forward_1_1primitive__desc>`& hint_fwd_pd,
			const :ref:`primitive_attr<doxid-structdnnl_1_1primitive__attr>`& attr = :ref:`default_attr<doxid-structdnnl_1_1primitive__desc__base_1a11b068a79808c04e4f9bcaffb0e34bb2>`(),
			bool allow_empty = false
			);
	
		:ref:`primitive_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a196d602f333a73661f6d83dec6305169>`(:ref:`dnnl_primitive_desc_t<doxid-group__dnnl__api__primitives__common_1gaabde3e27edf071b62b39f47bace7efd6>` pd);
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`dst_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ae0679bc5801322f06004a00bc4817baa>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_src_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a37208af1371cfa184121940ef004fe13>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_dst_desc<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a00e8c1d6f4df273a382c373149e66ce5>`() const;
		:ref:`dnnl::algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` :ref:`get_algorithm<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a80be1aee3679ff64c52514e75053d355>`() const;
		:ref:`dnnl::prop_kind<doxid-group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f>` :ref:`get_prop_kind<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ac66797f7ea924804d82b69b9fe845e03>`() const;
		int :ref:`get_axis<doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ae58d2935ef9f94af09a3e8749333e839>`() const;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		:ref:`handle<doxid-structdnnl_1_1handle_1a5c631f7e5e4c92a13edb8e3422d3a973>`();
		:ref:`handle<doxid-structdnnl_1_1handle_1a022001b5b9c8940a1326a02b61fc4860>`(const :ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>&);
		:ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>& :ref:`operator =<doxid-structdnnl_1_1handle_1a4ad1ff54e4aafeb560a869c49aa20b52>` (const :ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>&);
		:ref:`handle<doxid-structdnnl_1_1handle_1aa13f3ecf4db240717074814412c7e70c>`(:ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>&&);
		:ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>& :ref:`operator =<doxid-structdnnl_1_1handle_1af3f85524f3d83abdd4917b46ce23e727>` (:ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>&&);
		:ref:`handle<doxid-structdnnl_1_1handle_1a9c408c09fce1278f5cb0d1fa9818fc86>`(T t, bool weak = false);
		void :ref:`reset<doxid-structdnnl_1_1handle_1a8862ef3d31c3b19bd88395e0b1373909>`(T t, bool weak = false);
		T :ref:`get<doxid-structdnnl_1_1handle_1affb19aaf768579eebdf885edbbef7d7a>`(bool allow_empty = false) const;
		:ref:`operator T<doxid-structdnnl_1_1handle_1ab3560c3d12724f48e9fdbe47077ff342>` () const;
		:ref:`operator bool<doxid-structdnnl_1_1handle_1af014b68c14db64b9bb6a2034fe04440e>` () const;
		bool :ref:`operator ==<doxid-structdnnl_1_1handle_1a8569ba9d1b62264df858f3b3316577c6>` (const :ref:`handle<doxid-structdnnl_1_1handle>`<T, traits>& other) const;
		bool :ref:`operator !=<doxid-structdnnl_1_1handle_1a4aaa512672b0ed203ef78be4ceac025e>` (const :ref:`handle<doxid-structdnnl_1_1handle>`& other) const;
		:ref:`primitive_desc_base<doxid-structdnnl_1_1primitive__desc__base_1a27780142d0880bb0ca678f7c5a1845b9>`();
		:ref:`engine<doxid-structdnnl_1_1engine>` :ref:`get_engine<doxid-structdnnl_1_1primitive__desc__base_1a3f3ea17a8e5767653732ebec37eff68f>`() const;
		const char* :ref:`impl_info_str<doxid-structdnnl_1_1primitive__desc__base_1a28661bd29607c71ecb8602d6c98adbc5>`() const;
		:ref:`memory::dim<doxid-structdnnl_1_1memory_1a6ad818e4699872cc913474fa5f122cd5>` :ref:`query_s64<doxid-structdnnl_1_1primitive__desc__base_1aa3936cde6aa188f79cc379200de718b3>`(:ref:`query<doxid-group__dnnl__api__primitives__common_1ga94efdd650364f4d9776cfb9b711cbdc1>` what) const;
		:ref:`memory::dims<doxid-structdnnl_1_1memory_1afdd20764d58c0b517d5a31276672aeb8>` :ref:`get_strides<doxid-structdnnl_1_1primitive__desc__base_1abc9e0d977461a700a9e4358b7855d443>`() const;
		:ref:`memory::dims<doxid-structdnnl_1_1memory_1afdd20764d58c0b517d5a31276672aeb8>` :ref:`get_dilations<doxid-structdnnl_1_1primitive__desc__base_1a3ef83caaeadb1750455e32a4e7b21f27>`() const;
		:ref:`memory::dims<doxid-structdnnl_1_1memory_1afdd20764d58c0b517d5a31276672aeb8>` :ref:`get_padding_l<doxid-structdnnl_1_1primitive__desc__base_1a906909bc36f17cbe41c0339ee61ff040>`() const;
		:ref:`memory::dims<doxid-structdnnl_1_1memory_1afdd20764d58c0b517d5a31276672aeb8>` :ref:`get_padding_r<doxid-structdnnl_1_1primitive__desc__base_1a776f9b58078fa3c386cb923b11ab43f2>`() const;
		float :ref:`get_epsilon<doxid-structdnnl_1_1primitive__desc__base_1aab607352eddadabf4434acde53b3b4ba>`() const;
	
		template <typename T = unsigned>
		T :ref:`get_flags<doxid-structdnnl_1_1primitive__desc__base_1aba48dee4be8e0eb4991559a71ca15c56>`() const;
	
		:ref:`dnnl::algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` :ref:`get_algorithm<doxid-structdnnl_1_1primitive__desc__base_1ab8320c0ef02ff21fd403ae48eef25fce>`() const;
		float :ref:`get_alpha<doxid-structdnnl_1_1primitive__desc__base_1a7729c2e158361b0cc198d3bc3bd8bcc9>`() const;
		float :ref:`get_beta<doxid-structdnnl_1_1primitive__desc__base_1a8647d5e87eedae825010698eb7036874>`() const;
		int :ref:`get_axis<doxid-structdnnl_1_1primitive__desc__base_1acb4c28b7ef038cf405da328aef027d72>`() const;
		:ref:`memory::dim<doxid-structdnnl_1_1memory_1a6ad818e4699872cc913474fa5f122cd5>` :ref:`get_local_size<doxid-structdnnl_1_1primitive__desc__base_1aed955ddc78d4ead205e902f171305ac4>`() const;
		float :ref:`get_k<doxid-structdnnl_1_1primitive__desc__base_1a687543ac536eb4f575e5c8795650b670>`() const;
		float :ref:`get_p<doxid-structdnnl_1_1primitive__desc__base_1a3bcf18de7fcf78a04c8f87ff183dd93e>`() const;
		std::vector<float> :ref:`get_factors<doxid-structdnnl_1_1primitive__desc__base_1a299e2777f19a743d14b644b685f3d7d0>`() const;
		:ref:`dnnl::algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` :ref:`get_cell_kind<doxid-structdnnl_1_1primitive__desc__base_1a47028901aea535a13fdd3b03e30aa14e>`() const;
		:ref:`dnnl::rnn_direction<doxid-group__dnnl__api__rnn_1ga33315cf335d1cbe26fd6b70d956e23d5>` :ref:`get_direction<doxid-structdnnl_1_1primitive__desc__base_1a9330f7bc871c6eeb0a62635aa7f1c923>`() const;
		:ref:`dnnl::algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` :ref:`get_activation_kind<doxid-structdnnl_1_1primitive__desc__base_1a750634e4fbd3aa4717c4779b94e43302>`() const;
		:ref:`memory::dims<doxid-structdnnl_1_1memory_1afdd20764d58c0b517d5a31276672aeb8>` :ref:`get_kernel<doxid-structdnnl_1_1primitive__desc__base_1a74df346199829072361d4532a28eb8b7>`() const;
		:ref:`memory::dim<doxid-structdnnl_1_1memory_1a6ad818e4699872cc913474fa5f122cd5>` :ref:`get_group_size<doxid-structdnnl_1_1primitive__desc__base_1adb3fcd06211cdb11123d7fb39faf8155>`() const;
		:ref:`dnnl::prop_kind<doxid-group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f>` :ref:`get_prop_kind<doxid-structdnnl_1_1primitive__desc__base_1af57da4ab8f4cc63e4c1814eb41f4c3c7>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`query_md<doxid-structdnnl_1_1primitive__desc__base_1ac2ec36092718ed89bece0fec7f5f3171>`(:ref:`query<doxid-group__dnnl__api__primitives__common_1ga94efdd650364f4d9776cfb9b711cbdc1>` what, int idx = 0) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`src_desc<doxid-structdnnl_1_1primitive__desc__base_1a31ee74fc65986558ac11db590945811a>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`dst_desc<doxid-structdnnl_1_1primitive__desc__base_1a0b724a92606a86a7ac9b6b9b07935529>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`weights_desc<doxid-structdnnl_1_1primitive__desc__base_1a35b7fb7725959ab336db58dd05e14d20>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_src_desc<doxid-structdnnl_1_1primitive__desc__base_1aeb499ab1390d20eb071d97ec4628029f>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_dst_desc<doxid-structdnnl_1_1primitive__desc__base_1aa95dd1711a45923204ffddc3f02ea546>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_weights_desc<doxid-structdnnl_1_1primitive__desc__base_1ab6dc65154169608dfb9c2e9842012826>`(int idx) const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`src_desc<doxid-structdnnl_1_1primitive__desc__base_1aa49d0307308faad5df4e5606583528f5>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`dst_desc<doxid-structdnnl_1_1primitive__desc__base_1ab4ce5fa06a8caa2237a6bf6e42d937d9>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`weights_desc<doxid-structdnnl_1_1primitive__desc__base_1af378f246b843e31bfdada2f386662667>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_src_desc<doxid-structdnnl_1_1primitive__desc__base_1a9bdf1c2edfe6afdde73f9acde10b2da9>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_dst_desc<doxid-structdnnl_1_1primitive__desc__base_1a88db48bf81f033a479ef2b1031504b4c>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`diff_weights_desc<doxid-structdnnl_1_1primitive__desc__base_1ad7cf56d773bf8daefdeabff31093ae2b>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`workspace_desc<doxid-structdnnl_1_1primitive__desc__base_1aaf33632e215a1f2b066a6111836ecbb3>`() const;
		:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` :ref:`scratchpad_desc<doxid-structdnnl_1_1primitive__desc__base_1af8bb36148b4bb356ae61cf48353910fb>`() const;
		:ref:`engine<doxid-structdnnl_1_1engine>` :ref:`scratchpad_engine<doxid-structdnnl_1_1primitive__desc__base_1aa1e474433668f235b8fb3888d399f200>`() const;
		:ref:`primitive_attr<doxid-structdnnl_1_1primitive__attr>` :ref:`get_primitive_attr<doxid-structdnnl_1_1primitive__desc__base_1a9d26b8c1068f0849da74a6ba358e5de6>`() const;
		:ref:`dnnl::primitive::kind<doxid-structdnnl_1_1primitive_1ad1ec93215a0cf3aa0a32bae0c2cd9169>` :ref:`get_kind<doxid-structdnnl_1_1primitive__desc__base_1a622be560a40df3c657b18904f81f2a0a>`() const;
		std::vector<uint8_t> :ref:`get_cache_blob_id<doxid-structdnnl_1_1primitive__desc__base_1ae9e850a065baa1b7dffe389a71013a1f>`() const;
		:ref:`primitive_desc<doxid-structdnnl_1_1primitive__desc_1ae5452031cfd89bda919543dace0ff7bd>`();
		bool :ref:`next_impl<doxid-structdnnl_1_1primitive__desc_1a841df469ca54c3de2d233e46f48322b2>`();

.. _details-structdnnl_1_1softmax__backward_1_1primitive__desc:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Primitive descriptor for a softmax backward propagation primitive.

Methods
-------

.. index:: pair: function; primitive_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a397eb6014080012b7bb1d6a17a9001d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	primitive_desc()

Default constructor. Produces an empty object.

.. index:: pair: function; primitive_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a9d5fa8870576a11cd240724e9b17ffd3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	primitive_desc(
		const :ref:`engine<doxid-structdnnl_1_1engine>`& aengine,
		:ref:`algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` aalgorithm,
		const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& diff_src_desc,
		const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& diff_dst_desc,
		const :ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>`& dst_desc,
		int axis,
		const :ref:`softmax_forward::primitive_desc<doxid-structdnnl_1_1softmax__forward_1_1primitive__desc>`& hint_fwd_pd,
		const :ref:`primitive_attr<doxid-structdnnl_1_1primitive__attr>`& attr = :ref:`default_attr<doxid-structdnnl_1_1primitive__desc__base_1a11b068a79808c04e4f9bcaffb0e34bb2>`(),
		bool allow_empty = false
		)

Constructs a primitive descriptor for a softmax backward propagation primitive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- aengine

		- Engine to use.

	*
		- aalgorithm

		- Softmax algorithm kind: either :ref:`dnnl::algorithm::softmax_accurate <doxid-group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a6aba07e95369523dbbb9cab366480dd4>`, or :ref:`dnnl::algorithm::softmax_log <doxid-group__dnnl__api__attributes_1gga00377dd4982333e42e8ae1d09a309640a0888321c22541f5d7094cf44bc261ec9>`.

	*
		- diff_src_desc

		- Diff source memory descriptor.

	*
		- diff_dst_desc

		- Diff destination memory descriptor.

	*
		- dst_desc

		- Destination memory descriptor.

	*
		- axis

		- Axis over which softmax is computed.

	*
		- hint_fwd_pd

		- Primitive descriptor for a softmax forward propagation primitive. It is used as a hint for deciding which memory format to use.

	*
		- attr

		- Primitive attributes to use. Attributes are optional and default to empty attributes.

	*
		- allow_empty

		- A flag signifying whether construction is allowed to fail without throwing an exception. In this case an empty object will be produced. This flag is optional and defaults to false.

.. index:: pair: function; primitive_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a196d602f333a73661f6d83dec6305169:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	primitive_desc(:ref:`dnnl_primitive_desc_t<doxid-group__dnnl__api__primitives__common_1gaabde3e27edf071b62b39f47bace7efd6>` pd)

Constructs a primitive descriptor for a softmax backward propagation primitive from a C API primitive descriptor that must have a matching kind.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- pd

		- C API primitive descriptor for a softmax backward propagation primitive.

.. index:: pair: function; dst_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ae0679bc5801322f06004a00bc4817baa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` dst_desc() const

Returns a destination memory descriptor.



.. rubric:: Returns:

Destination memory descriptor.

A zero memory descriptor if the primitive does not have a destination parameter.

.. index:: pair: function; diff_src_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a37208af1371cfa184121940ef004fe13:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` diff_src_desc() const

Returns a diff source memory descriptor.



.. rubric:: Returns:

Diff source memory descriptor.

A zero memory descriptor if the primitive does not have a diff source memory with.

.. index:: pair: function; diff_dst_desc
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a00e8c1d6f4df273a382c373149e66ce5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`memory::desc<doxid-structdnnl_1_1memory_1_1desc>` diff_dst_desc() const

Returns a destination memory descriptor.



.. rubric:: Returns:

Destination memory descriptor.

A zero memory descriptor if the primitive does not have a destination parameter.

.. index:: pair: function; get_algorithm
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1a80be1aee3679ff64c52514e75053d355:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`dnnl::algorithm<doxid-group__dnnl__api__attributes_1ga00377dd4982333e42e8ae1d09a309640>` get_algorithm() const

Returns an algorithm kind.



.. rubric:: Returns:

An algorithm kind.

:ref:`dnnl::algorithm::undef <doxid-group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438faf31ee5e3824f1f5e5d206bdf3029f22b>` if the primitive does not have an algorithm parameter.

.. index:: pair: function; get_prop_kind
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ac66797f7ea924804d82b69b9fe845e03:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`dnnl::prop_kind<doxid-group__dnnl__api__attributes_1gac7db48f6583aa9903e54c2a39d65438f>` get_prop_kind() const

Returns a propagation kind.



.. rubric:: Returns:

A propagation kind.

:ref:`dnnl::prop_kind::undef <doxid-group__dnnl__api__attributes_1ggac7db48f6583aa9903e54c2a39d65438faf31ee5e3824f1f5e5d206bdf3029f22b>` if the primitive does not have a propagation parameter.

.. index:: pair: function; get_axis
.. _doxid-structdnnl_1_1softmax__backward_1_1primitive__desc_1ae58d2935ef9f94af09a3e8749333e839:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int get_axis() const

Returns an axis.



.. rubric:: Returns:

An axis.

A negative number if the primitive does not have an axis parameter.

